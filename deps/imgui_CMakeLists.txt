cmake_minimum_required(VERSION 2.8.9)

# Maybe stop from CMAKEing in the wrong place
if (CMAKE_BINARY_DIR STREQUAL CMAKE_SOURCE_DIR)
    message(FATAL_ERROR "Source and build directories cannot be the same. Go use the /build directory.")
endif()


# Append Wno-error to avoid compiling imgui with Werror; imgui seems to trigger lots of warnings
if ("${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang" OR "${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-error")

  # apparently, this stronger command is needed to accomplish the same in Clang
  if ("${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-everything")
  endif()
endif()

# Backend
set(IMGUI_BACKEND_OPENGL3_GLFW "ON" CACHE BOOL "Enable openGL3_glfw backend")
set(IMGUI_BACKEND_OPENGL_MOCK "OFF" CACHE BOOL "Enable openGL_mock backend")

if("${IMGUI_BACKEND_OPENGL3_GLFW}")

  set(SRCS imgui.cpp imgui_draw.cpp imgui_widgets.cpp imgui_demo.cpp backends/imgui_impl_glfw.cpp backends/imgui_impl_opengl3.cpp)

  add_library(imgui ${SRCS})

  target_include_directories(imgui PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}")
  target_include_directories(imgui PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/../../build-debug-clang/_deps/glfw3-src/include/")
  target_include_directories(imgui PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/../../build-debug-clang/_deps/sdflib-src/libs/glad/include/")
  
  target_link_libraries(imgui PRIVATE glfw glad)

  if(APPLE)
    add_definitions(-DGLFW_INCLUDE_GLCOREARB)
    add_definitions(-DIMGUI_IMPL_OPENGL_LOADER_CUSTOM=<GLFW/glfw3.h>)
  else()
    add_definitions(-DIMGUI_IMPL_OPENGL_LOADER_GLAD)
  endif()

elseif("${IMGUI_BACKEND_OPENGL_MOCK}")

  # Disable every platform-specific thing I can find in imgui
  add_definitions(-DIMGUI_DISABLE_OSX_FUNCTIONS)
  add_definitions(-DIMGUI_DISABLE_WIN32_FUNCTIONS)
  add_definitions(-DIMGUI_DISABLE_WIN32_DEFAULT_CLIPBOARD_FUNCTIONS)
  add_definitions(-DIMGUI_DISABLE_WIN32_DEFAULT_IME_FUNCTIONS)
  
  set(SRCS imgui.cpp imgui_draw.cpp imgui_widgets.cpp)

  add_library(imgui ${SRCS})

  target_include_directories(imgui PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/")

endif()



set_target_properties(imgui PROPERTIES POSITION_INDEPENDENT_CODE TRUE)
